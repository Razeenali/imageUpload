{"ast":null,"code":"\"use client\";\n\n// src/useSuspenseQuery.ts\nimport { QueryObserver, skipToken } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nimport { defaultThrowOnError } from \"./suspense.js\";\nfunction useSuspenseQuery(options, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\"skipToken is not allowed for useSuspenseQuery\");\n    }\n  }\n  return useBaseQuery({\n    ...options,\n    enabled: true,\n    suspense: true,\n    throwOnError: defaultThrowOnError,\n    placeholderData: void 0\n  }, QueryObserver, queryClient);\n}\nexport { useSuspenseQuery };","map":{"version":3,"mappings":";;;AACA,SAASA,eAAeC,iBAAiB;AACzC,SAASC,oBAAoB;AAC7B,SAASC,2BAA2B;AAI7B,SAASC,iBAMdC,SACAC,aACuC;EACvC,IAAIC,QAAQC,IAAIC,aAAa,cAAc;IACzC,IAAKJ,QAAQK,YAAoBT,WAAW;MAC1CU,QAAQC,MAAM,+CAA+C;IAC/D;EACF;EAEA,OAAOV,aACL;IACE,GAAGG;IACHQ,SAAS;IACTC,UAAU;IACVC,cAAcZ;IACda,iBAAiB;EACnB,GACAhB,eACAM,YACF;AACF","names":["QueryObserver","skipToken","useBaseQuery","defaultThrowOnError","useSuspenseQuery","options","queryClient","process","env","NODE_ENV","queryFn","console","error","enabled","suspense","throwOnError","placeholderData"],"sources":["C:\\Users\\Razeen Ali\\499_capstone\\imageUpload\\react-node-s3-image-upload\\frontend\\node_modules\\@tanstack\\react-query\\src\\useSuspenseQuery.ts"],"sourcesContent":["'use client'\nimport { QueryObserver, skipToken } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport { defaultThrowOnError } from './suspense'\nimport type { UseSuspenseQueryOptions, UseSuspenseQueryResult } from './types'\nimport type { DefaultError, QueryClient, QueryKey } from '@tanstack/query-core'\n\nexport function useSuspenseQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseSuspenseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseSuspenseQueryResult<TData, TError> {\n  if (process.env.NODE_ENV !== 'production') {\n    if ((options.queryFn as any) === skipToken) {\n      console.error('skipToken is not allowed for useSuspenseQuery')\n    }\n  }\n\n  return useBaseQuery(\n    {\n      ...options,\n      enabled: true,\n      suspense: true,\n      throwOnError: defaultThrowOnError,\n      placeholderData: undefined,\n    },\n    QueryObserver,\n    queryClient,\n  ) as UseSuspenseQueryResult<TData, TError>\n}\n"]},"metadata":{},"sourceType":"module"}