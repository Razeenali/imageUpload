{"ast":null,"code":"// src/usePrefetchInfiniteQuery.tsx\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction usePrefetchInfiniteQuery(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  if (!client.getQueryState(options.queryKey)) {\n    client.prefetchInfiniteQuery(options);\n  }\n}\nexport { usePrefetchInfiniteQuery };","map":{"version":3,"mappings":";AAAA,SAASA,sBAAsB;AAQxB,SAASC,yBAOdC,SAOAC,aACA;EACA,MAAMC,SAASJ,eAAeG,WAAW;EAEzC,IAAI,CAACC,OAAOC,cAAcH,QAAQI,QAAQ,GAAG;IAC3CF,OAAOG,sBAAsBL,OAAO;EACtC;AACF","names":["useQueryClient","usePrefetchInfiniteQuery","options","queryClient","client","getQueryState","queryKey","prefetchInfiniteQuery"],"sources":["C:\\Users\\Razeen Ali\\499_capstone\\imageUpload\\react-node-s3-image-upload\\frontend\\node_modules\\@tanstack\\react-query\\src\\usePrefetchInfiniteQuery.tsx"],"sourcesContent":["import { useQueryClient } from './QueryClientProvider'\nimport type {\n  DefaultError,\n  FetchInfiniteQueryOptions,\n  QueryClient,\n  QueryKey,\n} from '@tanstack/query-core'\n\nexport function usePrefetchInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: FetchInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey,\n    TPageParam\n  >,\n  queryClient?: QueryClient,\n) {\n  const client = useQueryClient(queryClient)\n\n  if (!client.getQueryState(options.queryKey)) {\n    client.prefetchInfiniteQuery(options)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}